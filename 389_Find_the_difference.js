/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
*/

/**
 * @param {string} s
 * @param {string} t
 * @return {character}
 */

//The approach used to solve this problem is to use a hashmap and the time complexity for the code is 0(n + m) since we are iterating over 2 strings and the space complexity for the code is 0(n + m).
var findTheDifference = function(s, t) {
    if(s === "") return t;
    if(t === "") return s;
    let hashMap = new Map();
    let finalStr = "";
    for(let char of s){
        hashMap.set(char, (hashMap.get(char) || 0) + 1)
    }
    for(let char of t){
        hashMap.set(char, (hashMap.get(char) || 0 ) - 1)
    }
    for([key, value] of hashMap){
        if(value != 0) {
            finalStr = finalStr + key;
        }
    }
    return finalStr;
};